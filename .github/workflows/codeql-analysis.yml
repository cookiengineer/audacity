name: "CodeQL Analysis"

on:
  push:
    branches: [ master ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ master ]
  schedule:
    - cron: '00 00 * * *'
    - cron: '00 06 * * *'
    - cron: '00 12 * * *'
    - cron: '00 18 * * *'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest    
    env:
      AUDACITY_CMAKE_GENERATOR: ${{ matrix.config.generator }}
      AUDACITY_ARCH_LABEL: ${{ matrix.config.arch }}
      # Windows codesigning
      # This variables will be used by all the steps
      WINDOWS_CERTIFICATE: ${{ secrets.WINDOWS_CERTIFICATE }}
      WINDOWS_CERTIFICATE_PASSWORD: ${{ secrets.WINDOWS_CERTIFICATE_PASSWORD }}
      # Conan home location to be used for cache action
      CONAN_USER_HOME: "${{ github.workspace }}/conan-home/"
      CONAN_USER_HOME_SHORT: "${{ github.workspace }}/conan-home/short"
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:        
      fail-fast: false
      matrix:
        config:
          - name: Ubuntu
            os: ubuntu-latest
            arch: x86_64
            generator: Unix Makefiles
            compiler_cache: ccache
            compiler_cache_path: ~/.ccache
            language: 'cpp'  # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python' ]
       
    steps:
  
    - name: Checkout repository
      uses: actions/checkout@v2

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.
        # queries: ./path/to/local/query, your-org/your-repo/queries@main

    - name: Dependencies
      run: |
        exec bash "scripts/ci/dependencies.sh"
    - name: Environment
      run: |
        source "scripts/ci/environment.sh"
    - name: "Set up compiler cache"
      uses: actions/cache@v2
      with:
        path: ${{ matrix.config.compiler_cache_path }}
        key: ${{ matrix.config.os }}-${{ matrix.config.arch }}-${{ github.head_ref }}-${{ github.run_number }}
        restore-keys: |
          ${{ matrix.config.os }}-${{ matrix.config.arch }}-${{ github.head_ref }}-
          ${{ matrix.config.os }}-${{ matrix.config.arch }}-
    - name: Cache for .conan
      id: cache-conan
      uses: actions/cache@v2
      env:
        cache-name: cache-conan-modules
      with:
        path: ${{ env.CONAN_USER_HOME }}
        key: host-${{ matrix.config.name }}-${{ hashFiles('cmake-proxies/CMakeLists.txt') }}
        restore-keys: |
          host-${{ matrix.config.name }}-
      # Install scdoc with conan TODO: Move conan pkg to own repo
    - name: "[Linux] Install scdoc"
      if: runner.os == 'Linux'
      run: |
        conan remote add -f rigs-of-rods-deps https://conan.cloudsmith.io/rigs-of-rods/deps/
        conan install scdoc/1.11.1@anotherfoxguy/stable -g=virtualenv --build=missing
    - name: Configure
      env:
        CC: ${{ matrix.config.cc }}
        CXX: ${{ matrix.config.cxx }}
      run: |
        exec bash "scripts/ci/configure.sh"
    - name: Build
      run: |
        exec bash "scripts/ci/build.sh"
    - name: "Print compiler cache stats"
      run: ${{ matrix.config.compiler_cache }} -s
    - name: Install
      run: |
        exec bash "scripts/ci/install.sh"
